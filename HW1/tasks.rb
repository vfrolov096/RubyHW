p '1.Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.'
p '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]'

array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

#array.each_with_index do |e,i| # елементы с четными индексами
#	puts e if i%2 == 0
#end

#parray.each_with_index do |e,i| # елементы с не четными индексами
#	puts e if i%2 != 0
#end

p array.each_with_index {|e,i| puts e if i%2 != 0} 
p array.each_with_index {|e,i| puts e if i%2 == 0} 

p '---------------------------'

p '2.Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.'
p '[1, 99, 3, 15, 5, 123]'

array = [1, 99, 3, 15, 5, 123]

puts array.each_with_index do |e,i|
	puts e if i%2 != 0
end

p array.each_with_index {|e,i| puts e if i%2 == 0}

p '---------------------------'

p '3.Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ].'
p '[1, 99, 3, 15, 5, 123]'

array = [55, 23, 34, 345, 99]

puts array.index { |i| array[0] < i && i < array[-1] } || []

p '---------------------------'

p '4.Дан целочисленный массив. Вывести вначале все его нечетные элементы, а затем - четные.'
p [6, 1, 3, 4, 5, 12, 7, 8, 123, 234]

array = [6, 1, 3, 4, 5, 12, 7, 8, 123, 234]
p array.select { |e| e.odd? } + array.select { |e| e.even? }

p '---------------------------'

p '5.Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.'
p '[6, 2, 3, 4, 5, 6, 7, 8, 9, 10]'

array = [100, 5, 40, 23, 35, 340, 124]
p array.each { |e,i| puts e += array.first if e%2 == 0 }


p '---------------------------'


p '6.Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию.'
p '[6, -1, 3, 4, 5, -14, 7, 8, 123, 10]'

array = [6, -1, 3, 4, 5, 12, -7, 8, 123, 10]
p array.rotate(1)

p '---------------------------'

p '7.Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию.'
p '[6, -1, 3, 4, 5, -14, 7, 8, 123, 10]'

array = [6, -1, 3, 4, 5, 12, -7, 8, 123, 10]
p array.rotate(-1)

p '---------------------------'

p '8.Дан целочисленный массив. Упорядочить его по возрастанию.'	
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.sort!

p '---------------------------'

p '9.Дан целочисленный массив. Упорядочить его по убыванию.'	
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.sort!.reverse

# array.sort_by { |e| -e }
# array.sort {|x,y| -(x <=> y)}

p '---------------------------'

p '10.Дан целочисленный массив. Найти индекс минимального элемента.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.index(array.min)

p '---------------------------'

p '11.Дан целочисленный массив. Найти индекс максимального элемента.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.index(array.max)

p '---------------------------'

p '12.Дан целочисленный массив. Найти индекс первого минимального элемента.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.each_with_index.min

p '---------------------------'

p '13.Дан целочисленный массив. Найти индекс первого максимального элемента.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.each_with_index.max

p '---------------------------'

p '14.Дан целочисленный массив. Найти индекс последнего минимального элемента.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.each_with_index.min

p '---------------------------'

p '15.Дан целочисленный массив. Найти все четные элементы'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.even? }

p '---------------------------'

p '16.Дан целочисленный массив. Найти все нечетные элементы'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.odd? }

p '---------------------------'

p '17.Дан целочисленный массив. Найти количество четных элементов.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.even? }.size

p '---------------------------'

p '18.Дан целочисленный массив. Найти количество нечетных элементов.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.odd? }.size

p '---------------------------'

p '19.Дан целочисленный массив. Найти минимальный четный элемент.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.even? }.min 

p '---------------------------'

p '20.Дан целочисленный массив. Найти минимальный нечетный элемент.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.odd? }.min 

p '---------------------------'

p '21.Дан целочисленный массив. Найти максимальный четный элемент.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.even? }.max

p '---------------------------'

p '22.Дан целочисленный массив.  Найти максимальный нечетный элемент.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e.odd? }.max

p '---------------------------'

p '23.Дан целочисленный массив.  Найти минимальный положительный элемент.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e > 0 }.min

p '---------------------------'

p '24.Дан целочисленный массив.  Найти максимальный отрицательный элемент.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.select { |e| e < 0 }.min

p '---------------------------'

p '25.Дан целочисленный массив. Найти количество минимальных элементов.'
p '[6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200, -200]
p array.count { |i| i == array.min }

p '---------------------------'

p '26.Дан целочисленный массив. Найти количество максимальных элементов.'

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 123, 123, 10, -200, -200]
p array.count { |i| i == array.max }

p '---------------------------'

p '27.Дан целочисленный массив. Найти два наименьших элемента.'
p array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]

array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.sort.uniq.min 2

p '---------------------------'

p '28.Дан целочисленный массив. Найти два наибольших элемента.'
array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]

p array = [6, -1, 3, 4, 5, -12, -7, 8, 123, 10, -200]
p array.sort.uniq.max 2

p '---------------------------'

p '29.Дан целочисленный массив. Найти среднее арифметическое его элементов.'

p [6, 1, 3, 4, 5, 12, 7, 8, 123, 234]

array = [6, 1, 3, 4, 5, 12, 7, 8, 123, 234]
p average = (array.sum / array.size).to_f

p '---------------------------'


p '30.Дан целочисленный массив. Вывести вначале все его четные элементы, а затем - нечетные.'
p [6, 1, 3, 4, 5, 12, 7, 8, 123, 234]

array = [6, 1, 3, 4, 5, 12, 7, 8, 123, 234]
p array.select { |e| e.even? } + array.select { |e| e.odd? }

p '---------------------------'


